buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
        maven { url = "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url = "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT"
        classpath "gradle.plugin.com.matthewprenger:CurseGradle:1.4.0"
    }
}

apply plugin: "com.matthewprenger.cursegradle"
apply plugin: "net.minecraftforge.gradle.forge"
apply plugin: "idea"
apply plugin: "java"

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

file "build.properties" withReader {
    def prop = new Properties()
    prop.load(it)
    ext.config = new ConfigSlurper().parse prop
}

if (file("curse.properties").exists()) {
    file "curse.properties" withReader {
        def prop = new Properties()
        prop.load(it)
        ext.curse = new ConfigSlurper().parse prop
    }
} else {
    ext.curse = new Properties()
    ext.curse.key = ''
}

version = config.mod.version
group = config.mod.group
archivesBaseName = config.mod.name

ext.simpleVersion = version
version = "${config.minecraft.version}-${project.version}"

minecraft {
    version = "${config.minecraft.version}-${config.forge.version}"
    runDir = "run"
    useDepAts = true
    mappings = config.minecraft.mappings
    replace "@MCVERSION@", config.minecraft.version
    replace "@FVERSION@", config.forge.version
    replace "@MODID@", config.mod.id
    replace "@MODNAME@", config.mod.name
    replace "@MODDESC@", config.mod.desc
    replace "@MODVERSION@", config.mod.version
    replace "@MODAUTHOR@", config.mod.author
    replace "@MODURL@", config.mod.url
}

repositories {
    maven { url = "https://minecraft.curseforge.com/api/maven/" }
}

configurations {
    embedded
    compile.extendsFrom provided, embedded
}

dependencies {
    compile "opencomputers:OpenComputers:MC${config.minecraft.version}:${config.opencomputers.version}"
    compile "gregtechce:gregtech:${config.minecraft.version}:${config.gregtechce.version}"
    provided ("appeng:appliedenergistics2:${config.ae2.version}:api") {
        transitive = false
    }
}

extractRangemapReplacedMain {
    sourceSets {
        main {
            java {
                exclude "org/eientei/gtce2oc/reference"
            }
        }
    }
}

processResources {
    inputs.property "id", config.mod.id
    inputs.property "name", config.mod.name
    inputs.property "desc", config.mod.desc
    inputs.property "version", config.mod.version
    inputs.property "author", config.mod.author
    inputs.property "url", config.mod.url
    inputs.property "mcversion", config.minecraft.version
    inputs.property "fversion", config.forge.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand  'id': config.mod.id,
                'name': config.mod.name,
                'desc': config.mod.desc,
                'version': config.mod.version,
                'author': config.mod.author,
                'url': config.mod.url,
                'mcversion': config.minecraft.version,
                'fversion': config.forge.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

jar {
    exclude "org/eientei/gtce2oc/reference"
}

def getGitComment = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'show', '-s', '--format=%B', 'HEAD'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}

curseforge {
    apiKey = curse.key
    project {
        id = config.curse.id
        changelog = getGitComment
        releaseType = "release"
        addGameVersion config.minecraft.version

        mainArtifact(jar) {
            relations {
                requiredDependency "gregtechce"
                requiredDependency "opencomputers"
            }
        }
    }
}